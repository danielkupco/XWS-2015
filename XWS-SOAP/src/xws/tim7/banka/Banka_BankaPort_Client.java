package xws.tim7.banka;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.namespace.QName;

import xws.tim7.faktura.Faktura;
import xws.tim7.globals.MT9XXType;
import xws.tim7.globals.StatusType;
import xws.tim7.mt102.MT102Type;
import xws.tim7.mt103.MT103Type;
import xws.tim7.nalogzaplacanje.NalogZaPlacanjeType;
import xws.tim7.presek.PresekType;
import xws.tim7.zahtevzaizvod.ZahtevZaIzvodType;

/**
 * This class was generated by Apache CXF 2.6.5 2015-08-22T23:27:53.155+02:00
 * Generated source version: 2.6.5
 * 
 */
public final class Banka_BankaPort_Client {

	private static final QName SERVICE_NAME = new QName(
			"http://xws/tim7/banka", "BankaService");
	private String wsdlPart = "http://localhost:8080/Banka/%s?wsdl";
	private String racun;

	public Banka_BankaPort_Client(String racun) {
		this.racun = racun;			// racun korisnika, preko njega odredjujemo banku
	}

	private Banka getService() {
		Banka port = null;
		try {
			URL wsdlURL = new URL(String.format(wsdlPart, racun.substring(0, 3)));
			BankaService ss = new BankaService(wsdlURL, SERVICE_NAME);
			port = ss.getBankaPort();
		} catch (MalformedURLException e) {
			// TODO LOG ERROR
			e.printStackTrace();
		}
		return port;
	}
	
	public StatusType posaljiNalogZaPlacanje(Faktura faktura) {
		Banka banka = this.getService();		
		xws.tim7.nalogzaplacanje.ObjectFactory factory =  new xws.tim7.nalogzaplacanje.ObjectFactory();
		NalogZaPlacanjeType nzp = factory.createNalogZaPlacanjeType(faktura, racun);
		return banka.primiNalogZaPlacanje(nzp);
	}

	public PresekType primiZahtevZaIzvod(XMLGregorianCalendar date, int redniBroj) {
		xws.tim7.zahtevzaizvod.ObjectFactory factory = new xws.tim7.zahtevzaizvod.ObjectFactory();
		ZahtevZaIzvodType zahtevZaIzvod = factory.createZahtevZaIzvodType(racun, date, redniBroj);
		Banka banka = this.getService();
		PresekType retVal = null;
		try {
			retVal = banka.primiZahtevZaIzvod(zahtevZaIzvod);
		} catch (StatusMessage e) {
			// TODO LOG INFO
			e.printStackTrace();
		}
		return retVal;
	}
	
	
	/* KORISTI SAMO CENTRALNA BANKA -- delegira Implementaciji */
	
	public StatusType primiMT900(MT9XXType mt900) {
		Banka banka = this.getService();
		return banka.primiMT900(mt900);
	}
	
	public StatusType primiMT910(MT9XXType mt910) {
		Banka banka = this.getService();
		return banka.primiMT910(mt910);
	}
	
	public StatusType primiMT103(MT103Type mt103) {
		Banka banka = this.getService();
		return banka.primiMT103(mt103);
	}
	
	public StatusType primiMT102(MT102Type mt102) {
		Banka banka = this.getService();
		return banka.primiMT102(mt102);
	}
}
