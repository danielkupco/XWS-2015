/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package xws.tim7.services.cb;

import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.logging.Logger;

import javax.ejb.EJB;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

import sessionbeans.banka.BankaDaoLocal;
import xws.tim7.services.banka.Banka_BankaPort_Client;
import xws.tim7.services.banka.StatusMessage;
import xws.tim7.entities.globals.MT9XXType;
import xws.tim7.entities.globals.StatusType;
import xws.tim7.entities.nalogzaplacanje.NalogZaPlacanjeType;

/**
 * This class was generated by Apache CXF 2.6.5 2015-08-22T23:28:01.206+02:00
 * Generated source version: 2.6.5
 * 
 */

@javax.jws.WebService(serviceName = "CentralnaBankaService", portName = "CentralnaBankaPort", targetNamespace = "http://xws/tim7/cb", wsdlLocation = "file://home/danex/Documents/Eclipse_workspaces/XWS/XWS_test/WEB-INF/wsdl/centralnaBanka.wsdl", endpointInterface = "xws.tim7.cb.CentralnaBanka")
public class CentralnaBankaImpl implements CentralnaBanka {

	private static final Logger LOG = Logger.getLogger(CentralnaBankaImpl.class.getName());

	@EJB
	private BankaDaoLocal registarBanaka;

	/*
	 * (non-Javadoc)
	 * 
	 * @see xws.tim7.cb.CentralnaBanka#primiMT102(xws.tim7.mt102.MT102Type
	 * nalogZaGrupnaPlacanja )*
	 */
	public xws.tim7.entities.globals.StatusType primiMT102(xws.tim7.entities.mt102.MT102Type nalogZaGrupnaPlacanja) {
		LOG.info("Executing operation primiMT102");
		System.out.println(nalogZaGrupnaPlacanja);
		try {
			/*
			 * OVU METODU POZIVA BANKA KADA JOJ SE POZOVE "URADI CLEARING"
			 */
			xws.tim7.entities.globals.StatusType _return = new StatusType();
			// MT102 se sastoji od nalogazaplacanje od poslednjeg clearinga
			// svaki nalog u MT102 mora biti manji od 250k i upuceni
			// klijentima JEDNE banke

			// pokupi prve 3 cifre banke poverioca
			String idBankePoverioca = registarBanaka.findBankaByObracunskiRacun(nalogZaGrupnaPlacanja.getObracunskiRacunBankePoverioca()).getIDBanke();
			Banka_BankaPort_Client tmpClient = new Banka_BankaPort_Client(
					idBankePoverioca);
			tmpClient.primiMT102(nalogZaGrupnaPlacanja);

			for (NalogZaPlacanjeType nzp : nalogZaGrupnaPlacanja
					.getNalogZaPlacanje()) {
				if (nzp.getOsnovaNalogaZaPlacanje().getIznos()
						.compareTo(new BigDecimal(250000)) < 0) {
					
					xws.tim7.entities.globals.ObjectFactory factory = new xws.tim7.entities.globals.ObjectFactory();

					String racunDuznika = nzp.getOsnovaNalogaZaPlacanje().getRacunDuznika().getBrojRacuna();
					Banka_BankaPort_Client clientK = new Banka_BankaPort_Client(racunDuznika);
					
					MT9XXType mt900 = factory.createMT900Type(nzp, nalogZaGrupnaPlacanja);
					clientK.primiMT900(mt900);

					String racunPoverioca = nzp.getOsnovaNalogaZaPlacanje().getRacunPoverioca().getBrojRacuna();
					Banka_BankaPort_Client clientD = new Banka_BankaPort_Client(racunPoverioca);
					
					MT9XXType mt910 = factory.createMT910Type(nzp, nalogZaGrupnaPlacanja);
					clientD.primiMT910(mt910);
				}
			}

			_return.setPoruka("[CENTRALNA BANKA] USPESNO PRIMLJEN MT102");
			_return.setStatusKod(new BigInteger("200"));
			
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(new StatusMessage("[CENTRALNA_BANKA] GRESKA PRI PRIJEMU MT102"));
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see xws.tim7.cb.CentralnaBanka#primiMT103(xws.tim7.mt103.MT103Type
	 * rtgsMT103 )*
	 */
	public xws.tim7.entities.globals.StatusType primiMT103(xws.tim7.entities.mt103.MT103Type rtgsMT103) {
		LOG.info("Executing operation primiMT103");
		System.out.println(rtgsMT103);
		try {
			xws.tim7.entities.globals.StatusType _return = new StatusType();
			// ObracunskiRacunDao.transferFunds(rtgsNalog.getObracunskiRacunBankeKupca(),
			// rtgsNalog.getObracunskiRacunBankeDostavljaca(),
			// rtgsNalog.getIznos());

			xws.tim7.entities.globals.ObjectFactory factory = new xws.tim7.entities.globals.ObjectFactory();
			MT9XXType mt900 = factory.createMT900Type(rtgsMT103);

			String racunBankeKupca = registarBanaka.findBankaByObracunskiRacun(rtgsMT103.getObracunskiRacunBankeDuznika()).getIDBanke();
			Banka_BankaPort_Client bankaKupca = new Banka_BankaPort_Client(racunBankeKupca);
			bankaKupca.primiMT900(mt900);

			// napravi Mt910
			MT9XXType mt910 = factory.createMT910Type(rtgsMT103);
			String racunBankeDobavljaca = registarBanaka.findBankaByObracunskiRacun(rtgsMT103.getObracunskiRacunBankePoverioca()).getIDBanke();
			Banka_BankaPort_Client bankaDobavljaca = new Banka_BankaPort_Client(racunBankeDobavljaca);
			bankaDobavljaca.primiMT103(rtgsMT103);	//prosledi mt103
			bankaDobavljaca.primiMT910(mt910);		//prosledi mt910

			_return.setPoruka("[CENTRALNA_BANKA] USPESNO PRIMLJEN MT103");
			_return.setStatusKod(new BigInteger("200"));
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

}
